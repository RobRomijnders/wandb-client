import base64
import configparser
import json
import os
from unittest.mock import MagicMock
import sys

import boto3
import kubernetes
import wandb
import wandb.sdk.launch.launch as launch
from wandb.sdk.launch.builder.kaniko import (
    _create_dockerfile_configmap,
    _wait_for_completion,
)

from .test_launch import mocked_fetchable_git_repo  # noqa: F401
from ..utils import fixture_open

import pytest


def mock_V1Job(**kwargs):
    return kwargs


def mock_V1ObjectMeta(**kwargs):
    return kwargs


def mock_V1ConfigMap(**kwargs):
    return kwargs


def test_wait_for_completion():
    mock_api_client = MagicMock()
    mock_job = MagicMock()
    mock_job_status = MagicMock()
    mock_job.status = mock_job_status
    mock_job_status.succeeded = 1
    mock_api_client.read_namespaced_job_status.return_value = mock_job
    assert _wait_for_completion(mock_api_client, "test", 60)

    mock_job_status.succeeded = None
    mock_job_status.failed = 1
    assert _wait_for_completion(mock_api_client, "test", 60) is False

    mock_job_status.failed = None
    assert _wait_for_completion(mock_api_client, "test", 5) is False


def test_create_dockerfile_configmap(monkeypatch, runner):
    monkeypatch.setattr(kubernetes.client, "V1ConfigMap", mock_V1ConfigMap)
    monkeypatch.setattr(kubernetes.client, "V1ObjectMeta", mock_V1ObjectMeta)
    with runner.isolated_filesystem():
        os.makedirs("./test/context/path/", exist_ok=True)
        with open("./test/context/path/Dockerfile.wandb-autogenerated", "wb") as f:
            f.write(b"docker file test contents")
        result = _create_dockerfile_configmap("test_name", "./test/context/path/")
        assert result["metadata"]["name"] == "test_name"
        assert result["metadata"]["namespace"] == "wandb"
        assert result["metadata"]["labels"] == {"wandb": "launch"}
        assert result["binary_data"]["Dockerfile"] == base64.b64encode(
            b"docker file test contents"
        ).decode("UTF-8")

        assert result["immutable"] is True


def kaniko_builder(monkeypatch, runner):
    pass
